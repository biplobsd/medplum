/*
 * Generated by @medplum/generator
 * Do not edit manually.
 */

import { Address } from './Address';
import { Annotation } from './Annotation';
import { Attachment } from './Attachment';
import { CodeableConcept } from './CodeableConcept';
import { ContactDetail } from './ContactDetail';
import { ContactPoint } from './ContactPoint';
import { Extension } from './Extension';
import { HumanName } from './HumanName';
import { Identifier } from './Identifier';
import { Meta } from './Meta';
import { Narrative } from './Narrative';
import { Organization } from './Organization';
import { Period } from './Period';
import { Person } from './Person';
import { Practitioner } from './Practitioner';
import { Reference } from './Reference';
import { Resource } from './Resource';
import { UsageContext } from './UsageContext';

/**
 * The Citation Resource enables reference to any knowledge artifact for
 * purposes of identification and attribution. The Citation Resource
 * supports existing reference structures and developing publication
 * practices such as versioning, expressing complex contributorship
 * roles, and referencing computable resources.
 */
export interface Citation {

  /**
   * This is a Citation resource
   */
  readonly resourceType: 'Citation';

  /**
   * The logical id of the resource, as used in the URL for the resource.
   * Once assigned, this value never changes.
   */
  id?: string;

  /**
   * The metadata about the resource. This is content that is maintained by
   * the infrastructure. Changes to the content might not always be
   * associated with version changes to the resource.
   */
  meta?: Meta;

  /**
   * A reference to a set of rules that were followed when the resource was
   * constructed, and which must be understood when processing the content.
   * Often, this is a reference to an implementation guide that defines the
   * special rules along with other profiles etc.
   */
  implicitRules?: string;

  /**
   * The base language in which the resource is written.
   */
  language?: string;

  /**
   * A human-readable narrative that contains a summary of the resource and
   * can be used to represent the content of the resource to a human. The
   * narrative need not encode all the structured data, but is required to
   * contain sufficient detail to make it &quot;clinically safe&quot; for a human to
   * just read the narrative. Resource definitions may define what content
   * should be represented in the narrative to ensure clinical safety.
   */
  text?: Narrative;

  /**
   * These resources do not have an independent existence apart from the
   * resource that contains them - they cannot be identified independently,
   * and nor can they have their own independent transaction scope.
   */
  contained?: Resource[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the resource. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the resource and that modifies the
   * understanding of the element that contains it and/or the understanding
   * of the containing element's descendants. Usually modifier elements
   * provide negation or qualification. To make the use of extensions safe
   * and manageable, there is a strict set of governance applied to the
   * definition and use of extensions. Though any implementer is allowed to
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension. Applications processing a
   * resource are required to check for modifier extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * An absolute URI that is used to identify this citation when it is
   * referenced in a specification, model, design or an instance; also
   * called its canonical identifier. This SHOULD be globally unique and
   * SHOULD be a literal address at which at which an authoritative
   * instance of this summary is (or will be) published. This URL can be
   * the target of a canonical reference. It SHALL remain the same when the
   * summary is stored on different servers.
   */
  url?: string;

  /**
   * A formal identifier that is used to identify this citation when it is
   * represented in other formats, or referenced in a specification, model,
   * design or an instance.
   */
  identifier?: Identifier[];

  /**
   * The identifier that is used to identify this version of the citation
   * when it is referenced in a specification, model, design or instance.
   * This is an arbitrary value managed by the citation author and is not
   * expected to be globally unique. For example, it might be a timestamp
   * (e.g. yyyymmdd) if a managed version is not available. There is also
   * no expectation that versions can be placed in a lexicographical
   * sequence.
   */
  version?: string;

  /**
   * A natural language name identifying the citation. This name should be
   * usable as an identifier for the module by machine processing
   * applications such as code generation.
   */
  name?: string;

  /**
   * A short, descriptive, user-friendly title for the citation.
   */
  title?: string;

  /**
   * The status of this summary. Enables tracking the life-cycle of the
   * content.
   */
  status?: 'draft' | 'active' | 'retired' | 'unknown';

  /**
   * A Boolean value to indicate that this citation is authored for testing
   * purposes (or education/evaluation/marketing) and is not intended to be
   * used for genuine usage.
   */
  experimental?: boolean;

  /**
   * The date  (and optionally time) when the citation was published. The
   * date must change when the business version changes and it must change
   * if the status code changes. In addition, it should change when the
   * substantive content of the citation changes.
   */
  date?: string;

  /**
   * The name of the organization or individual that published the
   * citation.
   */
  publisher?: string;

  /**
   * Contact details to assist a user in finding and communicating with the
   * publisher.
   */
  contact?: ContactDetail[];

  /**
   * A free text natural language description of the citation from a
   * consumer's perspective.
   */
  description?: string;

  /**
   * The content was developed with a focus and intent of supporting the
   * contexts that are listed. These contexts may be general categories
   * (gender, age, ...) or may be references to specific programs
   * (insurance plans, studies, ...) and may be used to assist with
   * indexing and searching for appropriate citation instances.
   */
  useContext?: UsageContext[];

  /**
   * A legal or geographic region in which the citation is intended to be
   * used.
   */
  jurisdiction?: CodeableConcept[];

  /**
   * Explanation of why this citation is needed and why it has been
   * designed as it has.
   */
  purpose?: string;

  /**
   * Use and/or publishing restrictions for the Citation, not for the cited
   * artifact.
   */
  copyright?: string;

  /**
   * The date on which the resource content was approved by the publisher.
   * Approval happens once when the content is officially approved for
   * usage.
   */
  approvalDate?: string;

  /**
   * The date on which the resource content was last reviewed. Review
   * happens periodically after approval but does not change the original
   * approval date.
   */
  lastReviewDate?: string;

  /**
   * The period during which the citation content was or is planned to be
   * in active use.
   */
  effectivePeriod?: Period;

  /**
   * Who authored the Citation.
   */
  author?: ContactDetail[];

  /**
   * Who edited the Citation.
   */
  editor?: ContactDetail[];

  /**
   * Who reviewed the Citation.
   */
  reviewer?: ContactDetail[];

  /**
   * Who endorsed the Citation.
   */
  endorser?: ContactDetail[];

  /**
   * A human-readable display of the citation.
   */
  summary?: CitationSummary[];

  /**
   * The assignment to an organizing scheme.
   */
  classification?: CitationClassification[];

  /**
   * Used for general notes and annotations not coded elsewhere.
   */
  note?: Annotation[];

  /**
   * The status of the citation.
   */
  currentState?: CodeableConcept[];

  /**
   * An effective date or period for a status of the citation.
   */
  statusDate?: CitationStatusDate[];

  /**
   * Artifact related to the Citation Resource.
   */
  relatesTo?: CitationRelatesTo[];

  /**
   * The article or artifact being described.
   */
  citedArtifact?: CitationCitedArtifact;
}

/**
 * The article or artifact being described.
 */
export interface CitationCitedArtifact {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * A formal identifier that is used to identify this citation when it is
   * represented in other formats, or referenced in a specification, model,
   * design or an instance.
   */
  identifier?: Identifier[];

  /**
   * A formal identifier that is used to identify things closely related to
   * this citation.
   */
  relatedIdentifier?: Identifier[];

  /**
   * When the cited artifact was accessed.
   */
  dateAccessed?: string;

  /**
   * The defined version of the cited artifact.
   */
  version?: CitationCitedArtifactVersion;

  /**
   * The status of the cited artifact.
   */
  currentState?: CodeableConcept[];

  /**
   * An effective date or period for a status of the cited artifact.
   */
  statusDate?: CitationCitedArtifactStatusDate[];

  /**
   * The title details of the article or artifact.
   */
  title?: CitationCitedArtifactTitle[];

  /**
   * Summary of the article or artifact.
   */
  abstract?: CitationCitedArtifactAbstract[];

  /**
   * The component of the article or artifact.
   */
  part?: CitationCitedArtifactPart;

  /**
   * The artifact related to the cited artifact.
   */
  relatesTo?: CitationCitedArtifactRelatesTo[];

  /**
   * If multiple, used to represent alternative forms of the article that
   * are not separate citations.
   */
  publicationForm?: CitationCitedArtifactPublicationForm[];

  /**
   * Used for any URL for the article or artifact cited.
   */
  webLocation?: CitationCitedArtifactWebLocation[];

  /**
   * The assignment to an organizing scheme.
   */
  classification?: CitationCitedArtifactClassification[];

  /**
   * This element is used to list authors and other contributors, their
   * contact information, specific contributions, and summary statements.
   */
  contributorship?: CitationCitedArtifactContributorship;

  /**
   * Any additional information or content for the article or artifact.
   */
  note?: Annotation[];
}

/**
 * Summary of the article or artifact.
 */
export interface CitationCitedArtifactAbstract {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * Used to express the reason or specific aspect for the abstract.
   */
  type?: CodeableConcept;

  /**
   * Used to express the specific language.
   */
  language?: CodeableConcept;

  /**
   * Abstract content.
   */
  text?: string;

  /**
   * Copyright notice for the abstract.
   */
  copyright?: string;
}

/**
 * The assignment to an organizing scheme.
 */
export interface CitationCitedArtifactClassification {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * The kind of classifier (e.g. publication type, keyword).
   */
  type?: CodeableConcept;

  /**
   * The specific classification value.
   */
  classifier?: CodeableConcept[];

  /**
   * Provenance and copyright of classification.
   */
  whoClassified?: CitationCitedArtifactClassificationWhoClassified;
}

/**
 * Provenance and copyright of classification.
 */
export interface CitationCitedArtifactClassificationWhoClassified {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * Person who created the classification.
   */
  person?: Reference<Person | Practitioner>;

  /**
   * Organization who created the classification.
   */
  organization?: Reference<Organization>;

  /**
   * The publisher of the classification, not the publisher of the article
   * or artifact being cited.
   */
  publisher?: Reference<Organization>;

  /**
   * Rights management statement for the classification.
   */
  classifierCopyright?: string;

  /**
   * Acceptable to re-use the classification.
   */
  freeToShare?: boolean;
}

/**
 * This element is used to list authors and other contributors, their
 * contact information, specific contributions, and summary statements.
 */
export interface CitationCitedArtifactContributorship {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * Indicates if the list includes all authors and/or contributors.
   */
  complete?: boolean;

  /**
   * An individual entity named in the author list or contributor list.
   */
  entry?: CitationCitedArtifactContributorshipEntry[];

  /**
   * Used to record a display of the author/contributor list without
   * separate coding for each list member.
   */
  summary?: CitationCitedArtifactContributorshipSummary[];
}

/**
 * An individual entity named in the author list or contributor list.
 */
export interface CitationCitedArtifactContributorshipEntry {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * A name associated with the individual.
   */
  name?: HumanName;

  /**
   * Initials for forename.
   */
  initials?: string;

  /**
   * Used for collective or corporate name as an author.
   */
  collectiveName?: string;

  /**
   * Unique person identifier.
   */
  identifier?: Identifier[];

  /**
   * Organization affiliated with the entity.
   */
  affiliationInfo?: CitationCitedArtifactContributorshipEntryAffiliationInfo[];

  /**
   * Physical mailing address for the author or contributor.
   */
  address?: Address[];

  /**
   * Email or telephone contact methods for the author or contributor.
   */
  telecom?: ContactPoint[];

  /**
   * This element identifies the specific nature of an individual&rsquo;s
   * contribution with respect to the cited work.
   */
  contributionType?: CodeableConcept[];

  /**
   * The role of the contributor (e.g. author, editor, reviewer).
   */
  role?: CodeableConcept;

  /**
   * Contributions with accounting for time or number.
   */
  contributionInstance?: CitationCitedArtifactContributorshipEntryContributionInstance[];

  /**
   * Indication of which contributor is the corresponding contributor for
   * the role.
   */
  correspondingContact?: boolean;

  /**
   * Used to code order of authors.
   */
  listOrder?: number;
}

/**
 * Organization affiliated with the entity.
 */
export interface CitationCitedArtifactContributorshipEntryAffiliationInfo {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * Display for the organization.
   */
  affiliation?: string;

  /**
   * Role within the organization, such as professional title.
   */
  role?: string;

  /**
   * Identifier for the organization.
   */
  identifier?: Identifier[];
}

/**
 * Contributions with accounting for time or number.
 */
export interface CitationCitedArtifactContributorshipEntryContributionInstance {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * The specific contribution.
   */
  type?: CodeableConcept;

  /**
   * The time that the contribution was made.
   */
  time?: string;
}

/**
 * Used to record a display of the author/contributor list without
 * separate coding for each list member.
 */
export interface CitationCitedArtifactContributorshipSummary {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * Used most commonly to express an author list or a contributorship
   * statement.
   */
  type?: CodeableConcept;

  /**
   * The format for the display string.
   */
  style?: CodeableConcept;

  /**
   * Used to code the producer or rule for creating the display string.
   */
  source?: CodeableConcept;

  /**
   * The display string for the author list, contributor list, or
   * contributorship statement.
   */
  value?: string;
}

/**
 * The component of the article or artifact.
 */
export interface CitationCitedArtifactPart {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * The kind of component.
   */
  type?: CodeableConcept;

  /**
   * The specification of the component.
   */
  value?: string;

  /**
   * The citation for the full article or artifact.
   */
  baseCitation?: Reference<Citation>;
}

/**
 * If multiple, used to represent alternative forms of the article that
 * are not separate citations.
 */
export interface CitationCitedArtifactPublicationForm {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * The collection the cited article or artifact is published in.
   */
  publishedIn?: CitationCitedArtifactPublicationFormPublishedIn;

  /**
   * The specific issue in which the cited article resides.
   */
  periodicRelease?: CitationCitedArtifactPublicationFormPeriodicRelease;

  /**
   * The date the article was added to the database, or the date the
   * article was released (which may differ from the journal issue
   * publication date).
   */
  articleDate?: string;

  /**
   * The date the article was last revised or updated in the database.
   */
  lastRevisionDate?: string;

  /**
   * Language in which this form of the article is published.
   */
  language?: CodeableConcept[];

  /**
   * Entry number or identifier for inclusion in a database.
   */
  accessionNumber?: string;

  /**
   * Used for full display of pagination.
   */
  pageString?: string;

  /**
   * Used for isolated representation of first page.
   */
  firstPage?: string;

  /**
   * Used for isolated representation of last page.
   */
  lastPage?: string;

  /**
   * Actual or approximate number of pages or screens.
   */
  pageCount?: string;

  /**
   * Copyright notice for the full article or artifact.
   */
  copyright?: string;
}

/**
 * The specific issue in which the cited article resides.
 */
export interface CitationCitedArtifactPublicationFormPeriodicRelease {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * Describes the form of the medium cited. Common codes are &quot;Internet&quot; or
   * &quot;Print&quot;.
   */
  citedMedium?: CodeableConcept;

  /**
   * Volume number of journal in which the article is published.
   */
  volume?: string;

  /**
   * Issue, part or supplement of journal in which the article is
   * published.
   */
  issue?: string;

  /**
   * Defining the date on which the issue of the journal was published.
   */
  dateOfPublication?: CitationCitedArtifactPublicationFormPeriodicReleaseDateOfPublication;
}

/**
 * Defining the date on which the issue of the journal was published.
 */
export interface CitationCitedArtifactPublicationFormPeriodicReleaseDateOfPublication {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * Date on which the issue of the journal was published.
   */
  date?: string;

  /**
   * Year on which the issue of the journal was published.
   */
  year?: string;

  /**
   * Month on which the issue of the journal was published.
   */
  month?: string;

  /**
   * Day on which the issue of the journal was published.
   */
  day?: string;

  /**
   * Spring, Summer, Fall/Autumn, Winter.
   */
  season?: string;

  /**
   * Text representation of the date of which the issue of the journal was
   * published.
   */
  text?: string;
}

/**
 * The collection the cited article or artifact is published in.
 */
export interface CitationCitedArtifactPublicationFormPublishedIn {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * Kind of container (e.g. Periodical, database, or book).
   */
  type?: CodeableConcept;

  /**
   * Journal identifiers include ISSN, ISO Abbreviation and NLMuniqueID;
   * Book identifiers include ISBN.
   */
  identifier?: Identifier[];

  /**
   * Name of the database or title of the book or journal.
   */
  title?: string;

  /**
   * Name of the publisher.
   */
  publisher?: Reference<Organization>;

  /**
   * Geographic location of the publisher.
   */
  publisherLocation?: string;
}

/**
 * The artifact related to the cited artifact.
 */
export interface CitationCitedArtifactRelatesTo {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * How the cited artifact relates to the target artifact.
   */
  relationshipType?: CodeableConcept;

  /**
   * The clasification of the related artifact.
   */
  targetClassifier?: CodeableConcept[];

  /**
   * The article or artifact that the cited artifact is related to.
   */
  targetUri?: string;

  /**
   * The article or artifact that the cited artifact is related to.
   */
  targetIdentifier?: Identifier;

  /**
   * The article or artifact that the cited artifact is related to.
   */
  targetReference?: Reference<Resource>;

  /**
   * The article or artifact that the cited artifact is related to.
   */
  targetAttachment?: Attachment;
}

/**
 * An effective date or period for a status of the cited artifact.
 */
export interface CitationCitedArtifactStatusDate {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * Classification of the status.
   */
  activity?: CodeableConcept;

  /**
   * Either occurred or expected.
   */
  actual?: boolean;

  /**
   * When the status started and/or ended.
   */
  period?: Period;
}

/**
 * The title details of the article or artifact.
 */
export interface CitationCitedArtifactTitle {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * Used to express the reason or specific aspect for the title.
   */
  type?: CodeableConcept[];

  /**
   * Used to express the specific language.
   */
  language?: CodeableConcept;

  /**
   * The title of the article or artifact.
   */
  text?: string;
}

/**
 * The defined version of the cited artifact.
 */
export interface CitationCitedArtifactVersion {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * The version number or other version identifier.
   */
  value?: string;

  /**
   * Citation for the main version of the cited artifact.
   */
  baseCitation?: Reference<Citation>;
}

/**
 * Used for any URL for the article or artifact cited.
 */
export interface CitationCitedArtifactWebLocation {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * Code the reason for different URLs, e.g. abstract and full-text.
   */
  type?: CodeableConcept;

  /**
   * The specific URL.
   */
  url?: string;
}

/**
 * The assignment to an organizing scheme.
 */
export interface CitationClassification {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * The kind of classifier (e.g. publication type, keyword).
   */
  type?: CodeableConcept;

  /**
   * The specific classification value.
   */
  classifier?: CodeableConcept[];
}

/**
 * Artifact related to the Citation Resource.
 */
export interface CitationRelatesTo {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * How the Citation resource relates to the target artifact.
   */
  relationshipType?: CodeableConcept;

  /**
   * The clasification of the related artifact.
   */
  targetClassifier?: CodeableConcept[];

  /**
   * The article or artifact that the Citation Resource is related to.
   */
  targetUri?: string;

  /**
   * The article or artifact that the Citation Resource is related to.
   */
  targetIdentifier?: Identifier;

  /**
   * The article or artifact that the Citation Resource is related to.
   */
  targetReference?: Reference<Resource>;

  /**
   * The article or artifact that the Citation Resource is related to.
   */
  targetAttachment?: Attachment;
}

/**
 * An effective date or period for a status of the citation.
 */
export interface CitationStatusDate {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * Classification of the status.
   */
  activity?: CodeableConcept;

  /**
   * Either occurred or expected.
   */
  actual?: boolean;

  /**
   * When the status started and/or ended.
   */
  period?: Period;
}

/**
 * A human-readable display of the citation.
 */
export interface CitationSummary {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * Format for display of the citation.
   */
  style?: CodeableConcept;

  /**
   * The human-readable display of the citation.
   */
  text?: string;
}
