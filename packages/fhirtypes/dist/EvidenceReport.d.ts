/*
 * Generated by @medplum/generator
 * Do not edit manually.
 */

import { Annotation } from './Annotation';
import { Citation } from './Citation';
import { CodeableConcept } from './CodeableConcept';
import { ContactDetail } from './ContactDetail';
import { Device } from './Device';
import { Extension } from './Extension';
import { Group } from './Group';
import { Identifier } from './Identifier';
import { Meta } from './Meta';
import { Narrative } from './Narrative';
import { Organization } from './Organization';
import { Period } from './Period';
import { Person } from './Person';
import { Quantity } from './Quantity';
import { Range } from './Range';
import { Reference } from './Reference';
import { RelatedArtifact } from './RelatedArtifact';
import { Resource } from './Resource';
import { UsageContext } from './UsageContext';

/**
 * The EvidenceReport Resource is a specialized container for a
 * collection of resources and codable concepts, adapted to support
 * compositions of Evidence, EvidenceVariable, and Citation resources and
 * related concepts.
 */
export interface EvidenceReport {

  /**
   * This is a EvidenceReport resource
   */
  readonly resourceType: 'EvidenceReport';

  /**
   * The logical id of the resource, as used in the URL for the resource.
   * Once assigned, this value never changes.
   */
  id?: string;

  /**
   * The metadata about the resource. This is content that is maintained by
   * the infrastructure. Changes to the content might not always be
   * associated with version changes to the resource.
   */
  meta?: Meta;

  /**
   * A reference to a set of rules that were followed when the resource was
   * constructed, and which must be understood when processing the content.
   * Often, this is a reference to an implementation guide that defines the
   * special rules along with other profiles etc.
   */
  implicitRules?: string;

  /**
   * The base language in which the resource is written.
   */
  language?: string;

  /**
   * A human-readable narrative that contains a summary of the resource and
   * can be used to represent the content of the resource to a human. The
   * narrative need not encode all the structured data, but is required to
   * contain sufficient detail to make it &quot;clinically safe&quot; for a human to
   * just read the narrative. Resource definitions may define what content
   * should be represented in the narrative to ensure clinical safety.
   */
  text?: Narrative;

  /**
   * These resources do not have an independent existence apart from the
   * resource that contains them - they cannot be identified independently,
   * and nor can they have their own independent transaction scope.
   */
  contained?: Resource[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the resource. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the resource and that modifies the
   * understanding of the element that contains it and/or the understanding
   * of the containing element's descendants. Usually modifier elements
   * provide negation or qualification. To make the use of extensions safe
   * and manageable, there is a strict set of governance applied to the
   * definition and use of extensions. Though any implementer is allowed to
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension. Applications processing a
   * resource are required to check for modifier extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * An absolute URI that is used to identify this EvidenceReport when it
   * is referenced in a specification, model, design or an instance; also
   * called its canonical identifier. This SHOULD be globally unique and
   * SHOULD be a literal address at which at which an authoritative
   * instance of this summary is (or will be) published. This URL can be
   * the target of a canonical reference. It SHALL remain the same when the
   * summary is stored on different servers.
   */
  url?: string;

  /**
   * The status of this summary. Enables tracking the life-cycle of the
   * content.
   */
  status?: 'draft' | 'active' | 'retired' | 'unknown';

  /**
   * The content was developed with a focus and intent of supporting the
   * contexts that are listed. These contexts may be general categories
   * (gender, age, ...) or may be references to specific programs
   * (insurance plans, studies, ...) and may be used to assist with
   * indexing and searching for appropriate evidence report instances.
   */
  useContext?: UsageContext[];

  /**
   * A formal identifier that is used to identify this EvidenceReport when
   * it is represented in other formats, or referenced in a specification,
   * model, design or an instance.
   */
  identifier?: Identifier[];

  /**
   * A formal identifier that is used to identify things closely related to
   * this EvidenceReport.
   */
  relatedIdentifier?: Identifier[];

  /**
   * Citation Resource or display of suggested citation for this report.
   */
  citeAsReference?: Reference<Citation>;

  /**
   * Citation Resource or display of suggested citation for this report.
   */
  citeAsMarkdown?: string;

  /**
   * Specifies the kind of report, such as grouping of classifiers, search
   * results, or human-compiled expression.
   */
  type?: CodeableConcept;

  /**
   * Used for footnotes and annotations.
   */
  note?: Annotation[];

  /**
   * Link, description or reference to artifact associated with the report.
   */
  relatedArtifact?: RelatedArtifact[];

  /**
   * Specifies the subject or focus of the report. Answers &quot;What is this
   * report about?&quot;.
   */
  subject?: EvidenceReportSubject;

  /**
   * The name of the organization or individual that published the evidence
   * report.
   */
  publisher?: string;

  /**
   * Contact details to assist a user in finding and communicating with the
   * publisher.
   */
  contact?: ContactDetail[];

  /**
   * An individiual, organization, or device primarily involved in the
   * creation and maintenance of the content.
   */
  author?: ContactDetail[];

  /**
   * An individiual, organization, or device primarily responsible for
   * internal coherence of the content.
   */
  editor?: ContactDetail[];

  /**
   * An individiual, organization, or device primarily responsible for
   * review of some aspect of the content.
   */
  reviewer?: ContactDetail[];

  /**
   * An individiual, organization, or device responsible for officially
   * endorsing the content for use in some setting.
   */
  endorser?: ContactDetail[];

  /**
   * Relationships that this composition has with other compositions or
   * documents that already exist.
   */
  relatesTo?: EvidenceReportRelatesTo[];

  /**
   * The root of the sections that make up the composition.
   */
  section?: EvidenceReportSection[];
}

/**
 * Relationships that this composition has with other compositions or
 * documents that already exist.
 */
export interface EvidenceReportRelatesTo {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * The type of relationship that this composition has with anther
   * composition or document.
   */
  code?: 'replaces' | 'amends' | 'appends' | 'transforms' | 'replacedWith' | 'amendedWith' | 'appendedWith' | 'transformedWith';

  /**
   * The target composition/document of this relationship.
   */
  targetIdentifier?: Identifier;

  /**
   * The target composition/document of this relationship.
   */
  targetReference?: Reference<EvidenceReport>;
}

/**
 * The root of the sections that make up the composition.
 */
export interface EvidenceReportSection {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * The label for this particular section.  This will be part of the
   * rendered content for the document, and is often used to build a table
   * of contents.
   */
  title?: string;

  /**
   * A code identifying the kind of content contained within the section.
   * This should be consistent with the section title.
   */
  focus?: CodeableConcept;

  /**
   * A definitional Resource identifying the kind of content contained
   * within the section. This should be consistent with the section title.
   */
  focusReference?: Reference<Resource>;

  /**
   * Identifies who is responsible for the information in this section, not
   * necessarily who typed it in.
   */
  author?: Reference<Person | Device | Group | Organization>[];

  /**
   * A human-readable narrative that contains the attested content of the
   * section, used to represent the content of the resource to a human. The
   * narrative need not encode all the structured data, but is peferred to
   * contain sufficient detail to make it acceptable for a human to just
   * read the narrative.
   */
  text?: Narrative;

  /**
   * How the entry list was prepared - whether it is a working list that is
   * suitable for being maintained on an ongoing basis, or if it represents
   * a snapshot of a list of items from another source, or whether it is a
   * prepared list where items may be marked as added, modified or deleted.
   */
  mode?: 'working' | 'snapshot' | 'changes';

  /**
   * Specifies the order applied to the items in the section entries.
   */
  orderedBy?: CodeableConcept;

  /**
   * Specifies any type of classification of the evidence report.
   */
  entryClassifier?: CodeableConcept[];

  /**
   * A reference to the actual resource from which the narrative in the
   * section is derived.
   */
  entryReference?: Reference<Resource>[];

  /**
   * Quantity as content.
   */
  entryQuantity?: Quantity[];

  /**
   * If the section is empty, why the list is empty. An empty section
   * typically has some text explaining the empty reason.
   */
  emptyReason?: CodeableConcept;

  /**
   * A nested sub-section within this section.
   */
  section?: EvidenceReportSection[];
}

/**
 * Specifies the subject or focus of the report. Answers &quot;What is this
 * report about?&quot;.
 */
export interface EvidenceReportSubject {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * Characteristic.
   */
  characteristic?: EvidenceReportSubjectCharacteristic[];

  /**
   * Used for general notes and annotations not coded elsewhere.
   */
  note?: Annotation[];
}

/**
 * Characteristic.
 */
export interface EvidenceReportSubjectCharacteristic {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * Characteristic code.
   */
  code?: CodeableConcept;

  /**
   * Characteristic value.
   */
  valueReference?: Reference<Resource>;

  /**
   * Characteristic value.
   */
  valueCodeableConcept?: CodeableConcept;

  /**
   * Characteristic value.
   */
  valueBoolean?: boolean;

  /**
   * Characteristic value.
   */
  valueQuantity?: Quantity;

  /**
   * Characteristic value.
   */
  valueRange?: Range;

  /**
   * Is used to express not the characteristic.
   */
  exclude?: boolean;

  /**
   * Timeframe for the characteristic.
   */
  period?: Period;
}
