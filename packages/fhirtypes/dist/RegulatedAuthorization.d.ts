/*
 * Generated by @medplum/generator
 * Do not edit manually.
 */

import { ActivityDefinition } from './ActivityDefinition';
import { BiologicallyDerivedProduct } from './BiologicallyDerivedProduct';
import { CodeableConcept } from './CodeableConcept';
import { CodeableReference } from './CodeableReference';
import { DeviceDefinition } from './DeviceDefinition';
import { Extension } from './Extension';
import { Identifier } from './Identifier';
import { Location } from './Location';
import { MedicinalProductDefinition } from './MedicinalProductDefinition';
import { Meta } from './Meta';
import { Narrative } from './Narrative';
import { NutritionProduct } from './NutritionProduct';
import { ObservationDefinition } from './ObservationDefinition';
import { Organization } from './Organization';
import { PackagedProductDefinition } from './PackagedProductDefinition';
import { Period } from './Period';
import { PlanDefinition } from './PlanDefinition';
import { Practitioner } from './Practitioner';
import { Reference } from './Reference';
import { ResearchStudy } from './ResearchStudy';
import { Resource } from './Resource';
import { SubstanceDefinition } from './SubstanceDefinition';

/**
 * Regulatory approval, clearance or licencing related to a regulated
 * product, treatment, facility or activity that is cited in a guidance,
 * regulation, rule or legislative act. An example is Market
 * Authorization relating to a Medicinal Product.
 */
export interface RegulatedAuthorization {

  /**
   * This is a RegulatedAuthorization resource
   */
  readonly resourceType: 'RegulatedAuthorization';

  /**
   * The logical id of the resource, as used in the URL for the resource.
   * Once assigned, this value never changes.
   */
  id?: string;

  /**
   * The metadata about the resource. This is content that is maintained by
   * the infrastructure. Changes to the content might not always be
   * associated with version changes to the resource.
   */
  meta?: Meta;

  /**
   * A reference to a set of rules that were followed when the resource was
   * constructed, and which must be understood when processing the content.
   * Often, this is a reference to an implementation guide that defines the
   * special rules along with other profiles etc.
   */
  implicitRules?: string;

  /**
   * The base language in which the resource is written.
   */
  language?: string;

  /**
   * A human-readable narrative that contains a summary of the resource and
   * can be used to represent the content of the resource to a human. The
   * narrative need not encode all the structured data, but is required to
   * contain sufficient detail to make it &quot;clinically safe&quot; for a human to
   * just read the narrative. Resource definitions may define what content
   * should be represented in the narrative to ensure clinical safety.
   */
  text?: Narrative;

  /**
   * These resources do not have an independent existence apart from the
   * resource that contains them - they cannot be identified independently,
   * and nor can they have their own independent transaction scope.
   */
  contained?: Resource[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the resource. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the resource and that modifies the
   * understanding of the element that contains it and/or the understanding
   * of the containing element's descendants. Usually modifier elements
   * provide negation or qualification. To make the use of extensions safe
   * and manageable, there is a strict set of governance applied to the
   * definition and use of extensions. Though any implementer is allowed to
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension. Applications processing a
   * resource are required to check for modifier extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * Business identifier for the authorization, typically assigned by the
   * authorizing body.
   */
  identifier?: Identifier[];

  /**
   * The product type, treatment, facility or activity that is being
   * authorized.
   */
  subject?: Reference<MedicinalProductDefinition | BiologicallyDerivedProduct | NutritionProduct |
      PackagedProductDefinition | SubstanceDefinition | DeviceDefinition | ResearchStudy | ActivityDefinition |
      PlanDefinition | ObservationDefinition | Practitioner | Organization | Location>[];

  /**
   * Overall type of this authorization, for example drug marketing
   * approval, orphan drug designation.
   */
  type?: CodeableConcept;

  /**
   * General textual supporting information.
   */
  description?: string;

  /**
   * The territory (e.g., country, jurisdiction etc.) in which the
   * authorization has been granted.
   */
  region?: CodeableConcept[];

  /**
   * The status that is authorised e.g. approved. Intermediate states and
   * actions can be tracked with cases and applications.
   */
  status?: CodeableConcept;

  /**
   * The date at which the current status was assigned.
   */
  statusDate?: string;

  /**
   * The time period in which the regulatory approval, clearance or
   * licencing is in effect. As an example, a Marketing Authorization
   * includes the date of authorization and/or an expiration date.
   */
  validityPeriod?: Period;

  /**
   * Condition for which the use of the regulated product applies.
   */
  indication?: CodeableReference;

  /**
   * The intended use of the product, e.g. prevention, treatment,
   * diagnosis.
   */
  intendedUse?: CodeableConcept;

  /**
   * The legal or regulatory framework against which this authorization is
   * granted, or other reasons for it.
   */
  basis?: CodeableConcept[];

  /**
   * The organization that has been granted this authorization, by some
   * authoritative body (the 'regulator').
   */
  holder?: Reference<Organization>;

  /**
   * The regulatory authority or authorizing body granting the
   * authorization. For example, European Medicines Agency (EMA), Food and
   * Drug Administration (FDA), Health Canada (HC), etc.
   */
  regulator?: Reference<Organization>;

  /**
   * The case or regulatory procedure for granting or amending a regulated
   * authorization. An authorization is granted in response to
   * submissions/applications by those seeking authorization. A case is the
   * administrative process that deals with the application(s) that relate
   * to this and assesses them. Note: This area is subject to ongoing
   * review and the workgroup is seeking implementer feedback on its use
   * (see link at bottom of page).
   */
  case?: RegulatedAuthorizationCase;
}

/**
 * The case or regulatory procedure for granting or amending a regulated
 * authorization. An authorization is granted in response to
 * submissions/applications by those seeking authorization. A case is the
 * administrative process that deals with the application(s) that relate
 * to this and assesses them. Note: This area is subject to ongoing
 * review and the workgroup is seeking implementer feedback on its use
 * (see link at bottom of page).
 */
export interface RegulatedAuthorizationCase {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  modifierExtension?: Extension[];

  /**
   * Identifier by which this case can be referenced.
   */
  identifier?: Identifier;

  /**
   * The defining type of case.
   */
  type?: CodeableConcept;

  /**
   * The status associated with the case.
   */
  status?: CodeableConcept;

  /**
   * Relevant date for this case.
   */
  datePeriod?: Period;

  /**
   * Relevant date for this case.
   */
  dateDateTime?: string;

  /**
   * A regulatory submission from an organization to a regulator, as part
   * of an assessing case. Multiple applications may occur over time, with
   * more or different information to support or modify the submission or
   * the authorization. The applications can be considered as steps within
   * the longer running case or procedure for this authorization process.
   */
  application?: RegulatedAuthorizationCase[];
}
